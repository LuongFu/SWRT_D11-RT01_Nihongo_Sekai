@using JapaneseLearningPlatform.Data.Enums
@using JapaneseLearningPlatform.Models
@model List<Report>

@{
    ViewData["Title"] = "Quản lý Báo cáo";

    // subjectsCount: dictionary Subject → count
    var subjectsCount = ((IEnumerable<dynamic>)ViewBag.Subjects ?? Enumerable.Empty<dynamic>())
                        .ToDictionary(x => (ReportSubject)x.Key, x => (int)x.Count);

    var roles = (string[])(ViewBag.Roles ?? Array.Empty<string>());
    var statuses = (string[])(ViewBag.Statuses ?? Array.Empty<string>());
    var currentSubject = (string)(ViewBag.CurrentSubject ?? "");
    var currentRole = (string)(ViewBag.CurrentRole ?? "");
    var currentStatus = (string)(ViewBag.CurrentStatus ?? "");
    var q = (string)(ViewBag.Q ?? "");
    var page = (int)(ViewBag.Page ?? 1);
    var pageSize = (int)(ViewBag.PageSize ?? 10);
    var total = (int)(ViewBag.Total ?? 0);
    var totalPages = (int)Math.Ceiling((double)total / pageSize);

    // helper map enum → label
    Func<ReportSubject, string> subjLabel = subj => subj switch
    {
        ReportSubject.Technical     => "Hỗ Trợ Kỹ Thuật",
        ReportSubject.Billing       => "Thanh Toán & Hóa Đơn",
        ReportSubject.Courses       => "Câu Hỏi Về Khóa Học",
        ReportSubject.Partnerships  => "Đối Tác Doanh Nghiệp",
        ReportSubject.Feedback       => "Phản Hồi & Góp Ý",
        _                           => "Khác"
    };

    // parse currentSubject (string) về enum để kiểm tra
    ReportSubject? current = null;
    if (Enum.TryParse<ReportSubject>(currentSubject, out var cs))
    {
        current = cs;
    }
}

@section Styles {
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap" rel="stylesheet" />

    <style>
        /* Phong cách Nhật Bản nhẹ nhàng */
        .filter-row {
            margin-bottom: 1rem;
        }
        .filter-row .btn-subject {
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
            padding: 0.5rem 1rem;
            border: 1px solid #f8bbd0;
            background: transparent;
            color: #ad1457;
            border-radius: 6px;
            font-weight: 500;
        }
        .filter-row .btn-subject.active {
            background-color: #f8bbd0;
            color: #880e4f;
        }
        .filter-row select,
        .filter-row input {
            margin-right: 0.5rem;
            margin-bottom: 0.5rem;
            padding: 0.4rem 0.8rem;
            border: 1px solid #e0e0e0;
            border-radius: 6px;
        }

        .reports-table {
            background: #ffffff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
        }
        .reports-table th,
        .reports-table td {
            vertical-align: middle !important;
        }

        .btn-info {
            background-color: #29b6f6;
            border-color: #29b6f6;
            color: #fff;
        }
        .btn-success {
            background-color: #66bb6a;
            border-color: #66bb6a;
            color: #fff;
        }
        .pagination {
            justify-content: center;
        }
    </style>
}

<h2 class="mb-4" style="color: #ad1457;">@ViewData["Title"]</h2>

<!-- Hàng 1: Nút filter theo Chủ đề -->
<div class="filter-row">
    @foreach (var subj in Enum.GetValues<ReportSubject>().Cast<ReportSubject>())
    {
        var value = subj.ToString();
        var isActive = value == currentSubject;
        var count = subjectsCount.ContainsKey(subj) ? subjectsCount[subj] : 0;
        <button type="button"
                class="btn-subject @(isActive ? "active" : "")"
                data-subject="@value">
            @subjLabel(subj) (@count)
        </button>
    }
</div>

<!-- Hàng 2: Vai trò, Trạng thái, Live Search -->
<div class="filter-row d-flex flex-wrap align-items-center">
    <select id="roleFilter" class="form-select w-auto">
        <option value="">Tất cả vai trò</option>
        @foreach (var r in roles)
        {
            <option value="@r" @@(r == currentRole ? "selected" : "")>@r</option>
        }
    </select>

    <select id="statusFilter" class="form-select w-auto">
        <option value="">Tất cả trạng thái</option>
        @foreach (var st in statuses)
        {
            <option value="@st" @@(st == currentStatus ? "selected" : "")>@st</option>
        }
    </select>

    <input type="text"
           id="search"
           class="form-control w-auto"
           placeholder="Live search..."
           value="@q" />
</div>

<table class="table table-hover reports-table">
    <thead class="table-light">
        <tr>
            <th>Id</th>
            <th>Email</th>
            <th>Chủ đề</th>
            <th>Vai trò</th>
            @* Chỉ hiển thị cột OrderNumber khi filter = Billing *@
            @if (current == ReportSubject.Billing)
            {
                <th>Mã đơn hàng</th>
            }
            <th>Ngày gửi</th>
            <th>Trạng thái</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody id="reportsBody">
        @foreach (var r in Model)
        {
            <tr data-subject="@r.Subject"
                data-role="@r.Role"
                data-status="@r.IsResolved"
                data-search="@($"{r.Email} {r.Message}".ToLower())">
                <td>@r.Id</td>
                <td>@r.Email</td>
                <td>@subjLabel(r.Subject)</td>
                <td>@r.Role</td>
                @if (current == ReportSubject.Billing)
                {
                    <td>@r.OrderNumber</td>
                }
                <td>@r.SubmittedAt.ToLocalTime():g</td>
                <td>@(r.IsResolved ? "Đã" : "Chưa")</td>
                <td>
                    <a asp-action="Details"
                       asp-route-id="@r.Id"
                       class="btn btn-sm btn-info">Xem</a>
                    @if (!r.IsResolved)
                    {
                        <form asp-action="Resolve"
                              method="post"
                              class="d-inline">
                            <input type="hidden" name="id" value="@r.Id" />
                            <button type="submit" class="btn btn-sm btn-success">
                                Hoàn thành
                            </button>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<nav>
    <ul class="pagination">
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == page ? "active" : "")">
                <a class="page-link"
                   asp-action="AdminIndex"
                   asp-route-page="@i"
                   asp-route-subject="@currentSubject"
                   asp-route-role="@currentRole"
                   asp-route-status="@currentStatus"
                   asp-route-q="@q">
                    @i
                </a>
            </li>
        }
    </ul>
</nav>

@section Scripts {
    <script>
        // Reload page when subject/role/status change
        function reload() {
            const s  = $(".btn-subject.active").data("subject") || "";
            const r  = $("#roleFilter").val()    || "";
            const st = $("#statusFilter").val()  || "";
            location.href = `?subject=${s}&role=${r}&status=${st}&q=`;
        }
        $(".btn-subject").click(function() {
            $(".btn-subject").removeClass("active");
            $(this).addClass("active");
            reload();
        });
        $("#roleFilter, #statusFilter").change(reload);

        // Live search client‑side
        $("#search").on("input", function() {
            const q = $(this).val().trim().toLowerCase();
            $("#reportsBody tr").each(function() {
                const hay = $(this).data("search") || "";
                $(this).toggle(hay.indexOf(q) !== -1);
            });
        });
    </script>
}
