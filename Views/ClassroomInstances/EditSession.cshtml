@model JapaneseLearningPlatform.Data.ViewModels.ClassroomInstanceVM
@{
    ViewData["Title"] = "Sửa phiên lớp học";
}

<div class="container mt-4">
    <h2 class="fw-bold mb-4 text-center">Sửa lớp: @Model.TemplateTitle</h2>

    <form asp-action="EditSession" asp-route-id="@Model.Id" method="post">
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="TemplateId" />

        <div class="mb-3">
            <label asp-for="SessionDurationHours" class="form-label">Session Time (hours)</label>
            <input asp-for="SessionDurationHours" type="number" class="form-control" min="1" max="12" />
            <span asp-validation-for="SessionDurationHours" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="StartDate" class="form-label"></label>
            <input asp-for="StartDate" type="date" class="form-control" />
            <span asp-validation-for="StartDate" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="EndDate" class="form-label"></label>
            <input asp-for="EndDate" type="date" class="form-control" />
            <span asp-validation-for="EndDate" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Price" class="form-label"></label>
            <input asp-for="Price" type="number" class="form-control" min="0" step="0.01" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="MaxCapacity" class="form-label"></label>
            <input asp-for="MaxCapacity" class="form-control" type="number" min="1" />
            <span asp-validation-for="MaxCapacity" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="GoogleMeetLink" class="form-label"></label>
            <input asp-for="GoogleMeetLink" class="form-control" />
            <span asp-validation-for="GoogleMeetLink" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Status" class="form-label">Status</label>
            <select asp-for="Status" asp-items="ViewBag.StatusList" class="form-control"></select>
        </div>

        <div class="mt-4 d-flex justify-content-between">
            <a asp-action="MySession" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back
            </a>
            <button type="submit" class="btn btn-success">
                <i class="bi bi-save"></i> Save Changes
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const startDateInput = document.querySelector('[name="StartDate"]');
            const endDateInput = document.querySelector('[name="EndDate"]');
            const form = document.querySelector('form');

            function validateDates() {
                const today = new Date();
                today.setHours(0, 0, 0, 0);

                const startDate = new Date(startDateInput.value);
                const endDate = new Date(endDateInput.value);

                // Xóa thông báo cũ
                startDateInput.setCustomValidity("");
                endDateInput.setCustomValidity("");

                // Check ngày bắt đầu
                if (startDate < today) {
                    startDateInput.setCustomValidity("Ngày bắt đầu không được là ngày quá khứ.");
                }

                // Check ngày kết thúc
                if (endDate < today) {
                    endDateInput.setCustomValidity("Ngày kết thúc không được là ngày quá khứ.");
                }

                // Check endDate > startDate
                if (endDate <= startDate) {
                    endDateInput.setCustomValidity("Ngày kết thúc phải sau ngày bắt đầu.");
                }

                // Check thời gian không vượt quá 1 năm
                const diffDays = (endDate - startDate) / (1000 * 60 * 60 * 24);
                if (diffDays > 365) {
                    endDateInput.setCustomValidity("Khoảng thời gian giữa ngày bắt đầu và kết thúc không được vượt quá 1 năm.");
                }
            }

            startDateInput.addEventListener("change", validateDates);
            endDateInput.addEventListener("change", validateDates);
            form.addEventListener("submit", function (e) {
                validateDates();
                if (!form.checkValidity()) {
                    e.preventDefault();
                    form.reportValidity();
                }
            });
        });
    </script>
}
