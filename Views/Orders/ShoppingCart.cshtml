@using JapaneseLearningPlatform.Data.ViewModels
@model ShoppingCartVM

@{
    ViewData["Title"] = "Giỏ hàng";
    ViewData["HideNavbar"] = false;
    ViewData["HideFooter"] = false;
}

@section Styles {
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap" rel="stylesheet" />

    <style>
        /* ========= Giỏ hàng & Nút VNPay ========= */
        body {
            font-family: 'Source Sans Pro', sans-serif;
        }

        .cart-header {
            font-size: 2rem;
            font-weight: 700;
            margin: 2rem 0 1.5rem;
            color: #333;
        }

        .cart-container {
            max-width: 1140px;
            margin: 0 auto;
            display: flex;
            gap: 2rem;
        }

        .cart-left {
            flex: 2;
        }

        .cart-right {
            flex: 1;
            border: 1px solid #ddd;
            border-radius: 6px;
            padding: 1.5rem;
            background: #fdf2f2;
            border-start: 4px solid #dc3545;
        }

            .cart-right h4 {
                font-size: 1.5rem;
                font-weight: 600;
                margin-bottom: 1rem;
                color: #dc3545;
            }

        /* ===== Khóa học trong giỏ (giờ thành card) ===== */
        .cart-item-card {
            border: 1px solid #eee;
            border-radius: .5rem;
            padding: 1rem;
            margin-bottom: 1rem;
            transition: transform .2s, box-shadow .2s;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .cart-item-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 18px rgba(0,0,0,0.08);
            }

        .cart-item-details {
            display: flex;
            align-items: center;
        }

        .cart-item-img {
            width: 100px;
            height: 60px;
            object-fit: cover;
            border-radius: .25rem;
            margin-right: 1rem;
        }

        .cart-course-title {
            font-size: 1.1rem;
            font-weight: 500;
            color: #212529;
        }

        .cart-remove {
            color: #dc3545;
            font-size: .9rem;
            transition: color .2s;
        }

            .cart-remove:hover {
                color: #b02a37;
                font-weight: 600;
            }

        /* Nút VNPay đỏ */
        .vnpay-btn {
            position: relative;
            overflow: hidden;
            background: #dc3545;
            border: none;
            transition: transform .2s ease, box-shadow .2s ease;
            color: #fff;
        }

            .vnpay-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            }

        .vnpay-logo {
            width: 24px;
            margin-right: .5rem;
        }

        .vnpay-btn::after {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: rgba(255,255,255,0.2);
            transform: skewX(-20deg);
            transition: left .5s ease;
        }

        .vnpay-btn:hover::after {
            left: 200%;
        }

        /* ========= Gợi ý cho bạn ========= */
        .hover-effect {
            transition: transform .2s ease, box-shadow .2s ease;
        }

            .hover-effect:hover {
                transform: translateY(-4px);
                box-shadow: 0 8px 20px rgba(0,0,0,0.15);
            }

        .badge-new {
            background: #dc3545;
            color: #fff;
        }
    </style>
}

<div class="container">
    <div class="text-center cart-header">Giỏ hàng</div>
    <div class="cart-container">
        <!-- Khóa học trong giỏ bây giờ thành card -->
        <div class="cart-left">
            <p>@Model.ShoppingCart.ShoppingCartItems.Count khóa học trong giỏ</p>
            @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
            {
                <div class="cart-item-card">
                    <div class="cart-item-details">
                        <img src="@item.Course.ImageURL" alt="@item.Course.Name" class="cart-item-img" />
                        <div>
                            <div class="cart-course-title">@item.Course.Name</div>
                            <div class="text-muted">@item.Course.FinalPrice.ToString("c")</div>
                            <a class="cart-remove"
                               asp-controller="Orders"
                               asp-action="RemoveItemFromShoppingCart"
                               asp-route-id="@item.Course.Id">
                                Xóa
                            </a>
                        </div>
                    </div>
                    <div class="fw-bold">@((item.Amount * item.Course.FinalPrice).ToString("c"))</div>
                </div>
            }
        </div>

        <!-- Tổng và thanh toán -->
        <div class="cart-right">
            <h4>Tổng: @Model.ShoppingCartTotal.ToString("c")</h4>

            <!-- PayPal -->
            <div id="paypal-btn" class="mb-3 w-100"></div>

            <!-- VNPay -->
            <div class="d-grid gap-2 mb-3">
                <form asp-action="VNPayCheckout" method="post">
                    <button type="submit"
                            class="btn btn-lg vnpay-btn d-flex align-items-center justify-content-center">
                        <img src="~/images/vnpay-logo.png" alt="VNPay" class="vnpay-logo" />
                        <span>Thanh toán VNPay</span>
                    </button>
                </form>
            </div>

            <!-- Thêm khóa học -->
            <a class="btn btn-outline-danger w-100" asp-controller="Courses" asp-action="Index">
                Thêm khóa học
            </a>
        </div>
    </div>

    <!-- Gợi ý cho bạn giữ nguyên -->
    @if (Model.RecommendedCourses != null && Model.RecommendedCourses.Any())
    {
        <div class="mt-5">
            <h4 class="cart-header text-center">Gợi ý cho bạn</h4>
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-4">
                @foreach (var item in Model.RecommendedCourses)
                {
                    <div class="col">
                        <div class="card h-100 border-start border-4 border-danger shadow-sm d-flex flex-column hover-effect position-relative">
                            <div class="position-absolute top-0 start-0 m-2">
                                <span class="badge badge-new">Mới</span>
                            </div>
                            <img src="@item.CoverImageUrl"
                                 class="card-img-top"
                                 alt="@item.Name"
                                 style="height:200px; object-fit:cover;" />
                            <div class="card-body d-flex flex-column">
                                <h5 class="card-title">@item.Name</h5>
                                <p class="card-text text-truncate">@item.Description</p>
                                <div class="mt-auto">
                                    <p class="fw-bold text-danger">@item.Tuition.ToString("c")</p>
                                    <a asp-controller="Courses"
                                       asp-action="Details"
                                       asp-route-id="@item.CourseId"
                                       class="btn btn-danger w-100">
                                        Xem khóa học
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://www.paypalobjects.com/api/checkout.js"></script>
    <script>
        let _total = @Html.Raw(Model.ShoppingCartTotal);
        paypal.Button.render({
            env: 'sandbox',
            client: {
                sandbox: 'AcKRtgL4i68EZ2ZYuYUx3ilihAg2YhL5dtF_m19A8MjBWVOn6ewNS4M_uV8gA3xi98zTcUq38gUHbVFx'
            },
            locale: 'en_US',
            style: { size: 'small', color: 'gold', shape: 'pill' },
            commit: true,
            payment: (data, actions) => actions.payment.create({
                transactions: [{ amount: { total: _total, currency: 'USD' } }]
            }),
            onAuthorize: (data, actions) =>
                actions.payment.execute().then(() => {
                    window.location.href = '@Url.Action("CompleteOrder", "Orders")';
                })
        }, '#paypal-btn');
    </script>
}
