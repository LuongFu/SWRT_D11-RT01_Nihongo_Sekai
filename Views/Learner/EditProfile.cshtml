@model JapaneseLearningPlatform.Models.ApplicationUser
@{
    ViewData["Title"] = "Chỉnh sửa hồ sơ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap" rel="stylesheet" />
}

<div class="change-password-bg d-flex align-items-center justify-content-center">
    <div class="change-password-card">
        <h3 class="text-center text-danger fw-bold mb-4">Chỉnh sửa hồ sơ</h3>

        @if (TempData["EditProfileSuccess"] != null)
        {
            <div class="alert alert-success">@TempData["EditProfileSuccess"]</div>
        }

        @if (TempData["EditProfileError"] != null)
        {
            <div class="alert alert-danger">@TempData["EditProfileError"]</div>
        }

        <form asp-action="EditProfile" method="post">
            @Html.AntiForgeryToken()

            <div class="mb-3">
                <label asp-for="FullName" class="form-label">Họ và tên</label>
                <input asp-for="FullName" class="form-control" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>

            <div class="mb-4">
                <label asp-for="Email" class="form-label">Email</label>
                <input asp-for="Email" class="form-control" readonly />
            </div>

            <div class="d-flex justify-content-between">
                <a asp-action="Profile" class="btn btn-outline-danger fw-semibold px-4">Hủy</a>
                <button type="submit" class="btn btn-danger fw-semibold px-4">Lưu thay đổi</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const totalPetals = 20;
        const half = totalPetals / 2;

        for (let i = 0; i < totalPetals; i++) {
            const petal = document.createElement("div");
            petal.classList.add("sakura-petal");
            if (i < half) {
                petal.style.left = (Math.random() * 50) + "vw";
            } else {
                petal.style.left = (50 + Math.random() * 50) + "vw";
            }
            const rotate = Math.random() * 360;
            petal.style.transform = `rotate(${rotate}deg)`;
            petal.style.animationDelay = (Math.random() * 5) + "s";
            petal.style.animationDuration = (5 + Math.random() * 5) + "s";

            document.body.appendChild(petal);
        }
    });
</script>
