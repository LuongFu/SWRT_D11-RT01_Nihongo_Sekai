@model JapaneseLearningPlatform.Data.ViewModels.TakeQuizVM
@using JapaneseLearningPlatform.Data.Enums

@{
    ViewData["Title"] = "Quiz Result";
    var correctAnswers = ViewBag.CorrectAnswers as int? ?? 0;
    var totalQuestions = ViewBag.TotalQuestions as int? ?? 0;
    var scorePercent = ViewBag.ScorePercent as int? ?? 0;
}

<div class="container mt-5">
    <div class="card shadow-sm border-0 rounded-4 p-4">
        <h2 class="fw-bold mb-3">Your Result: @Model.QuizTitle</h2>

        <div class="alert alert-info">
            <strong>Score:</strong> @correctAnswers / @totalQuestions
            (<span class="fw-bold">@scorePercent%</span>)
        </div>

        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            var question = Model.Questions[i];
            var selectedSingle = question.SelectedOptionId;
            var selectedMultiple = question.SelectedOptionIds ?? new List<int>();

            <div class="mb-4">
                <h5>Question @(i + 1): @question.QuestionText</h5>

                @foreach (var option in question.Options)
                {
                    bool isSelected = question.QuestionType == QuestionType.SingleChoice
                    ? option.OptionId == selectedSingle
                    : selectedMultiple.Contains(option.OptionId);

                    bool isCorrect = option.IsCorrect;

                    string bgClass = "";
                    string icon = "";

                    if (isSelected && isCorrect)
                    {
                        bgClass = "bg-success text-white";
                        icon = "bi bi-check-circle-fill";
                    }
                    else if (isSelected && !isCorrect)
                    {
                        bgClass = "bg-danger text-white";
                        icon = "bi bi-x-circle-fill";
                    }
                    else if (!isSelected && isCorrect)
                    {
                        bgClass = "bg-success bg-opacity-25";
                        icon = "bi bi-check-circle";
                    }

                    <div class="p-2 rounded mb-1 @bgClass d-flex justify-content-between align-items-center">
                        <span>@option.OptionText</span>
                        @if (!string.IsNullOrEmpty(icon))
                        {
                            <i class="@icon"></i>
                        }
                    </div>
                }
            </div>
            <hr />
        }

        <div class="mt-4">
            <a asp-controller="Courses" asp-action="Details" asp-route-id="@Model.CourseId" class="btn btn-outline-secondary mt-3">
                <i class="bi bi-arrow-left-circle"></i> Back to Course
            </a>
        </div>
    </div>
</div>
