@using JapaneseLearningPlatform.Data.ViewModels
@model LoginVM

@{
    ViewData["Title"] = "Đăng nhập";
    Layout = "_Layout";
    ViewData["HideNavbar"] = true;
    ViewData["HideFooter"] = true;
}

@section Head {
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Đăng nhập</title>
    <meta name="description"
          content="Đăng nhập vào tài khoản Nihongo Sekai của bạn và tiếp tục hành trình học tiếng Nhật với các khóa học chất lượng và lớp học trực tiếp." />
}

@section Styles {
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap" rel="stylesheet" />
    <!-- Global Stylesheet -->
    <link rel="stylesheet" href="/css/styles.css" />
    <!-- Page-Specific CSS -->
    <style>
        /* Layout Containers */
        .auth-page {
            min-height: 100vh;
            background: linear-gradient(135deg, var(--color-primary-50) 0%, var(--color-secondary-50) 100%);
            display: flex;
        }

        .auth-main {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: var(--spacing-3xl) var(--spacing-lg);
        }

        .auth-card {
            display: grid;
            grid-template-columns: 1fr 1fr;
            max-width: 1000px;
            width: 100%;
            background: #fff;
            border-radius: var(--radius-xl);
            box-shadow: 0 20px 25px -5px rgba(0,0,0,0.1),0 10px 10px -5px rgba(0,0,0,0.04);
            overflow: hidden;
        }

        /* Form Column */
        .auth-form-column {
            padding: var(--spacing-3xl);
        }

        .auth-brand {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: var(--spacing-sm);
            font-size: 1.5rem;
            font-weight: 700;
        }

            .auth-brand .brand-icon {
                font-size: 2rem;
                color: var(--color-primary-600);
            }

        .auth-title {
            font-family: var(--font-heading);
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: var(--spacing-sm);
            text-align: center;
        }

        .auth-subtitle {
            color: var(--color-gray-600);
            font-size: 1rem;
            line-height: 1.5;
            margin-bottom: var(--spacing-lg);
            text-align: center;
        }

        .form-label {
            font-weight: 600;
            color: var(--color-gray-700);
            margin-bottom: var(--spacing-sm);
            font-size: 0.875rem;
        }

        .form-control {
            padding: var(--spacing-lg);
            border: 2px solid var(--color-gray-200);
            border-radius: var(--radius-lg);
        }

            .form-control:focus {
                border-color: var(--color-primary-600);
                box-shadow: 0 0 0 3px rgba(220,38,38,0.1);
            }

        .auth-form-column .text-end {
            text-align: center !important;
        }

        /* Password Input with Eye Toggle */
        .password-input-wrapper {
            position: relative;
        }

            .password-input-wrapper .form-control {
                /* shrink input to accommodate toggle */
                width: calc(100% - 3rem);
                padding-right: 3rem;
            }

        /* Eye toggle button styling */
        .password-toggle {
            position: absolute;
            /* adjust horizontal offset as needed (e.g., 5% from the right edge of the wrapper) */
            right: 1%;
            top: 60%;
            transform: translateY(-50%);
            background: white;
            border: none;
            color: var(--color-gray-400);
            cursor: pointer;
            padding: var(--spacing-xs);
            border-radius: var(--radius-sm);
            transition: color 0.3s ease;
        }

            .password-toggle:hover {
                color: var(--color-gray-600);
            }

            .password-toggle svg {
                width: 25px;
                height: 25px;
            }
        /* Buttons & Links */
        .btn-danger {
            background-color: var(--color-primary-600);
            border-color: var(--color-primary-600);
        }

        .btn-outline-danger {
            color: var(--color-primary-600);
            border-color: var(--color-primary-600);
        }

        .text-danger {
            color: var(--color-primary-600) !important;
        }

        .text-decoration-none {
            text-decoration: none !important;
        }

        /* Benefits Column */
        .auth-benefits-column {
            position: relative;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            justify-content: center;
            /* gradient chính */
            background: linear-gradient( 135deg, var(--color-primary-600), var(--color-secondary-600) );
            color: #fff;
            padding: var(--spacing-3xl);
            /* bo góc bên phải của cả card */
            border-top-right-radius: var(--radius-xl);
            border-bottom-right-radius: var(--radius-xl);
        }

            /* chấm bi pattern */
            .auth-benefits-column::before {
                content: "";
                position: absolute;
                inset: 0; /* top:0; right:0; bottom:0; left:0; */
                pointer-events: none; /* không chắn click */
                background-image: url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M20 20c0 11.046-8.954 20-20 20v20h40V20H20z'/%3E%3C/g%3E%3C/svg%3E");
                background-repeat: repeat;
                background-position: center center;
            }

            /* đảm bảo nội dung luôn trên layer chấm bi */
            .auth-benefits-column > * {
                position: relative;
                z-index: 1;
            }


        .benefits-list .benefit-item {
            display: flex;
            align-items: flex-start;
            gap: var(--spacing-lg);
            margin-bottom: var(--spacing-md);
        }

        .benefit-icon {
            width: 100px;
            height: 50px;
            background: rgba(255,255,255,0.2);
            border-radius: var(--radius-lg);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        /* ============ LOGIN PAGE OPTIMIZED ============ */
        .auth-card {
            max-height: none;
            overflow: visible;
        }

        .auth-form-column,
        .auth-benefits-column {
            padding: var(--spacing-xl) var(--spacing-lg);
        }

        .auth-title {
            font-size: 1.6rem;
            margin-bottom: var(--spacing-sm);
        }

        .auth-subtitle {
            font-size: 0.95rem;
            margin-bottom: var(--spacing-md);
        }

        .form-control {
            padding: 0.75rem 1rem;
            font-size: 0.95rem;
            border-radius: var(--radius-md);
        }

        .btn,
        .btn-outline-danger {
            padding: 0.75rem 1rem;
            font-size: 1rem;
        }

        .mb-3 {
            margin-bottom: var(--spacing-md);
        }

        @@media (max-width: 768px) {
            .auth-card

        {
            display: flex;
            flex-direction: column;
        }

        .auth-form-column {
            order: 1; /* Form hiển thị trước */
        }

        .auth-benefits-column {
            order: 2; /* Benefit hiển thị sau */
        }

        }
    </style>
}

<div class="auth-page">
    <main class="auth-main">
        <div class="auth-card">
            <!-- Left: Sign-in Form -->
            <div class="auth-form-column">
                <div class="auth-brand">
                    <span class="brand-icon">日</span>
                    <span class="brand-nihongo">Nihongo</span>
                    <span class="brand-sekai">Sekai</span>
                </div>
                <h1 class="auth-title">Chào mừng trở lại</h1>
                <p class="auth-subtitle">Đăng nhập để tiếp tục hành trình học tiếng Nhật của bạn</p>

                @if (TempData["Success"] != null)
                {
                    <div class="alert alert-success">@TempData["Success"]</div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger" role="alert">
                        <strong>Xin lỗi!</strong> @TempData["Error"]
                    </div>
                }
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        @TempData["ErrorMessage"]
                    </div>
                }
                <form asp-action="Login" method="post" id="loginForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="mb-3">
                        <label asp-for="EmailAddress" class="form-label">Địa chỉ email</label>
                        <input asp-for="EmailAddress" class="form-control" placeholder="Nhập địa chỉ email của bạn" autofocus />
                        <span asp-validation-for="EmailAddress" class="text-danger"></span>
                    </div>

                    <div class="mb-3 password-input-wrapper">
                        <label asp-for="Password" class="form-label">Mật khẩu</label>
                        <input asp-for="Password" type="password" class="form-control" placeholder="Nhập mật khẩu của bạn" />
                        <button type="button" class="password-toggle" id="passwordToggle" aria-label="Toggle password visibility">
                            <svg class="eye-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" />
                                <circle cx="12" cy="12" r="3" />
                            </svg>
                            <svg class="eye-off-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="display:none;">
                                <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24" />
                                <line x1="1" y1="1" x2="23" y2="23" />
                            </svg>
                        </button>
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>

                    <button type="submit" class="btn btn-danger w-100 mb-3" id="loginButton">
                        <i class="bi bi-box-arrow-in-right me-1"></i> Đăng nhập
                    </button>

                    <div class="text-center text-muted mb-3">hoặc đăng nhập bằng</div>

                    <a asp-controller="Account" asp-action="ExternalLogin" asp-route-provider="Google"
                       class="btn btn-outline-danger w-100 mb-3 d-flex justify-content-center align-items-center">
                        <i class="bi bi-google me-2"></i> Tiếp tục với Google
                    </a>

                    <div class="text-end mb-2">
                        <a asp-action="ForgotPassword" class="text-danger text-decoration-none">Quên mật khẩu?</a>
                    </div>
                    <div class="text-center small mb-4">
                        Chưa có tài khoản? <a asp-action="Register" class="text-danger text-decoration-none">Đăng ký</a>
                    </div>

                    <div class="mt-4 text-center">
                        <a asp-controller="Home" asp-action="Index" class="text-muted small"><i class="bi bi-arrow-left-circle"></i> Quay về trang chủ</a>
                    </div>
                </form>
            </div>

            <!-- Right: Benefits Column -->
            <div class="auth-benefits-column">
                <h2>Chinh phục tiếng Nhật với sự tự tin</h2>
                <p>Tham gia cùng hàng ngàn người học trên hành trình thành thạo tiếng Nhật với nền tảng toàn diện của chúng tôi</p>
                <ul class="list-unstyled benefits-list">
                    <li class="benefit-item">
                        <div class="benefit-icon">📚</div>
                        <div><h5>Khóa học do chuyên gia dẫn dắt</h5><p class="small">Học từ người bản xứ và giáo viên chứng nhận với các bài học có cấu trúc, tiến bộ</p></div>
                    </li>
                    <li class="benefit-item">
                        <div class="benefit-icon">💬</div>
                        <div><h5>Thực hành hội thoại trực tiếp</h5><p class="small">Tham gia lớp học tương tác và luyện nói với người thật trong thời gian thực</p></div>
                    </li>
                    <li class="benefit-item">
                        <div class="benefit-icon">📊</div>
                        <div><h5>Theo dõi tiến trình của bạn</h5><p class="small">Theo dõi hành trình học của bạn với phân tích chi tiết và đề xuất cá nhân hóa</p></div>
                    </li>
                    <li class="benefit-item">
                        <div class="benefit-icon">🌍</div>
                        <div><h5>Cộng đồng toàn cầu</h5><p class="small">Kết nối với người học khắp thế giới và hòa mình vào văn hóa Nhật Bản</p></div>
                    </li>
                </ul>
            </div>
        </div>
    </main>
</div>


<!-- Scripts -->
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener("DOMContentLoaded", function () {
          // Password visibility toggle
          const passwordToggle = document.getElementById("passwordToggle");
          const passwordInput  = document.getElementById("Password");
          if (passwordToggle && passwordInput) {
            passwordToggle.addEventListener("click", function () {
              const eyeIcon    = this.querySelector(".eye-icon");
              const eyeOffIcon = this.querySelector(".eye-off-icon");

              if (passwordInput.type === "password") {
                passwordInput.type = "text";
                eyeIcon.style.display    = "none";
                eyeOffIcon.style.display = "block";
              } else {
                passwordInput.type = "password";
                eyeIcon.style.display    = "block";
                eyeOffIcon.style.display = "none";
              }
            });
          }

          // (Tùy chọn) Hiển thị thông báo bảo mật nếu có element #securityNotification
          const securityNotification = document.getElementById("securityNotification");
          if (securityNotification) {
            // Giả sử server có set 1 class "show-security" để trigger JS
            if (securityNotification.classList.contains("show-security")) {
              securityNotification.style.display   = "flex";
              securityNotification.style.animation = "slideInFromTop 0.5s ease";
              setTimeout(() => {
                securityNotification.style.animation = "slideOutToTop 0.5s ease";
                setTimeout(() => securityNotification.style.display = "none", 500);
              }, 3000);
            }
          }
        });
    </script>
}

