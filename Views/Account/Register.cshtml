@using JapaneseLearningPlatform.Data.ViewModels
@using JapaneseLearningPlatform.Data.Enums
@model RegisterVM

@{
    ViewData["Title"] = "Đăng ký - Nihongo Sekai";
    Layout = "_Layout";
    ViewData["HideNavbar"] = true;
    ViewData["HideFooter"] = true;
}

@section Head {
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <meta name="description"
          content="Tạo tài khoản Nihongo Sekai và bắt đầu hành trình học tiếng Nhật ngay hôm nay." />
}

@section Styles {
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap" rel="stylesheet" />
    <!-- Global Stylesheet -->
    <link asp-append-version="true" href="~/css/styles.css" rel="stylesheet" />
    <!-- Page-Specific CSS -->
    <style>
        /* ==================== RESPONSIVE LAYOUT ==================== */

        /* Auth Page Layout */
        .auth-page {
            min-height: 100vh;
            background: linear-gradient( 135deg, var(--color-primary-50) 0%, var(--color-secondary-50) 100% );
            display: flex;
            flex-direction: column;
        }

        /* Centering the card */
        .auth-main {
            flex: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: var(--spacing-3xl) var(--spacing-lg);
        }

        /* Two-Column Auth Card */
        .auth-card {
            display: flex;
            flex-direction: column; /* thay vì grid 2 cột */
            max-width: 1000px;
            width: 100%;
            border-radius: var(--radius-xl);
            overflow: hidden;
            background: var(--color-white);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }

        .form-split {
            display: flex;
            gap: var(--spacing-lg);
            flex-wrap: wrap; /* responsive fallback */
        }

            .form-split .form-group {
                flex: 1 1 48%; /* 2 cột */
                min-width: 220px; /* đảm bảo không vỡ khi thu nhỏ */
            }

        .auth-form-column {
            padding: 2.5rem 2rem; /* thay vì 3rem 3rem */
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .auth-header {
            text-align: center;
            margin-bottom: 8px; /* giảm khoảng cách */
        }

        .auth-brand {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: var(--spacing-sm);
            font-size: 1.5rem;
            font-weight: 700;
        }

            .auth-brand .brand-icon {
                font-size: 2rem;
                color: var(--color-primary-600);
            }

        .auth-title {
            font-family: var(--font-heading);
            font-size: 2rem;
            font-weight: 700;
            color: var(--color-gray-900);
            margin-bottom: var(--spacing-sm);
        }

        .auth-subtitle {
            color: var(--color-gray-600);
            font-size: 1rem;
            line-height: 1.5;
        }

        /* Form */
        .auth-form {
            display: flex;
            flex-direction: column;
            gap: 8px; /* giảm spacing */
        }

        .form-group {
            display: flex;
            flex-direction: column;
            margin-bottom: 1rem; /* giảm bớt khoảng cách giữa các field */
        }

        .form-group.password{
            margin-bottom: 0;
        }

            .form-group.compact {
                margin-bottom: 0.75rem; /* nếu cần sát hơn nữa */
            }

        .form-label {
            font-weight: 600;
            color: var(--color-gray-700);
            margin-bottom: 2px;
            font-size: 0.875rem;
        }

        .form-label.agreeTerms{
                margin: -8px 0;
            }

        .form-input {
            padding: var(--spacing-md); /* giảm chiều cao */
            border: 2px solid var(--color-gray-200);
            border-radius: var(--radius-lg);
            font-size: 0.95rem;
            font-family: inherit;
            transition: all 0.3s ease;
            background: var(--color-white);
        }

            .form-input:focus {
                outline: none;
                border-color: var(--color-primary-600);
                box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
                transform: translateY(-1px);
            }

            .form-input::placeholder {
                color: var(--color-gray-400);
            }

        /* Password wrapper */
        .password-input-wrapper {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: var(--spacing-lg);
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--color-gray-400);
            cursor: pointer;
            padding: var(--spacing-xs);
            border-radius: var(--radius-sm);
            transition: color 0.3s ease;
        }

            .password-toggle:hover {
                color: var(--color-gray-600);
            }

            .password-toggle svg {
                width: 20px;
                height: 20px;
            }

        /* Strength bar */
        .password-strength {
            margin-top: 0.25rem;
        }

        .strength-label {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--color-gray-700);
            margin-bottom: var(--spacing-sm);
        }

        .strength-bar {
            height: 6px;
            background: var(--color-gray-200);
            border-radius: 3px;
            overflow: hidden;
            margin-bottom: var(--spacing-sm);
        }

        .strength-fill {
            height: 100%;
            width: 0%;
            transition: all 0.3s ease;
            border-radius: 3px;
        }

        .strength-text {
            font-size: 0.875rem;
            font-weight: 500;
            color: var(--color-gray-600);
        }

        /* Requirements */
        .password-requirements {
            margin-top: 0.25rem;
            background: var(--color-gray-50);
            border-radius: var(--radius-md);
            border: 1px solid var(--color-gray-200);
            
        }

        .requirement {
            display: flex;
            align-items: center;
            gap: var(--spacing-sm);
            margin-bottom: var(--spacing-sm);
            font-size: 0.875rem;
            color: var(--color-gray-600);
            transition: color 0.3s ease;
        }

        .req-icon {
            font-weight: 600;
            width: 16px;
            text-align: center;
            color: var(--color-gray-400);
        }

        /* CTA Button */
        .auth-button {
            background: var(--color-primary-600);
            color: var(--color-white);
            border: none;
            padding: var(--spacing-md) var(--spacing-lg); /* gọn lại */
            border-radius: var(--radius-lg);
            font-size: 0.95rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: var(--spacing-sm);
            margin-top: 4px;
            margin-bottom: 4px;
        }

            .auth-button:hover {
                background: var(--color-primary-700);
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(220, 38, 38, 0.3);
            }

            .auth-button:disabled {
                background: var(--color-gray-400);
                cursor: not-allowed;
                transform: none;
                box-shadow: none;
            }

            .auth-button .spinner {
                width: 20px;
                height: 20px;
                border: 2px solid rgba(255, 255, 255, 0.3);
                border-top: 2px solid white;
                border-radius: 50%;
                animation: spin 1s linear infinite;
            }

        @@keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        /* File Upload */
        .file-upload {
            border: 2px dashed var(--color-gray-300);
            border-radius: var(--radius-lg);
            padding: var(--spacing-xl);
            text-align: center;
            cursor: pointer;
            transition: all .2s ease;
        }

            .file-upload:hover,
            .file-upload.dragover {
                border-color: var(--color-primary-600);
                background: var(--color-primary-50);
            }

        .file-upload-icon {
            font-size: 2rem;
            color: var(--color-gray-400);
            margin-bottom: var(--spacing-md);
        }

        .file-upload-text {
            font-weight: 500;
            color: var(--color-gray-700);
            margin-bottom: var(--spacing-xs);
        }

        .file-upload-hint {
            font-size: 0.875rem;
            color: var(--color-gray-500);
        }

        .file-list {
            margin-top: var(--spacing-md);
        }

        .file-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: var(--spacing-sm);
            background: var(--color-gray-50);
            border-radius: var(--radius-md);
            margin-bottom: var(--spacing-sm);
        }

        .file-remove {
            color: var(--color-error);
            cursor: pointer;
            font-size: 1.25rem;
            transition: transform .1s ease;
        }

            .file-remove:hover {
                transform: scale(1.2);
            }

        /* Specializations */
        .specializations-grid {
            display: grid;
            gap: var(--spacing-md);
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            margin-top: var(--spacing-sm);
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: var(--spacing-sm);
            padding: var(--spacing-sm);
            border-radius: var(--radius-md);
            transition: background .2s ease;
            cursor: pointer;
        }

            .checkbox-group:hover {
                background: var(--color-gray-50);
            }

        .checkbox-input {
            width: 18px;
            height: 18px;
            accent-color: var(--color-primary-600);
            cursor: pointer;
        }

        .checkbox-label {
            font-size: 0.875rem;
            color: var(--color-gray-700);
            cursor: pointer;
        }


        /* Social Login */
        .social-login {
            margin-top: 1.25rem; /* giảm bớt từ 2rem */
        }

        .social-divider {
            display: flex;
            align-items: center;
            margin: 0 0 8px;
            color: var(--color-gray-500);
            font-size: 0.875rem;
        }

            .social-divider::before,
            .social-divider::after {
                content: "";
                flex: 1;
                height: 1px;
                background: var(--color-gray-200);
            }

            .social-divider::before {
                margin-right: var(--spacing-lg);
            }

            .social-divider::after {
                margin-left: var(--spacing-lg);
            }

        .social-buttons {
            display: flex;
            width: 100%; /* bắt buộc để flex:1 hoạt động */
        }

        .social-button {
            flex: 1; /* chiếm full hàng */
            display: flex;
            align-items: center;
            justify-content: center;
            gap: var(--spacing-sm);
            padding: 0.5rem 1.25rem; /* gọn hơn */
            border: 2px solid var(--color-gray-200);
            border-radius: var(--radius-lg);
            background: var(--color-white);
            color: var(--color-gray-700);
            font-weight: 500;
            font-size: 0.95rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
        }

            .social-button:hover {
                border-color: var(--color-gray-300);
                background: var(--color-gray-50);
                transform: translateY(-1px);
            }

            .social-button img {
                width: 20px;
                height: 20px;
            }

        /* Right (Benefits) Column */
        /* Benefits Column */
        /* .auth-benefits-column {
            position: relative;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            justify-content: center;
            /* gradient chính */
            background: linear-gradient( 135deg, var(--color-primary-600), var(--color-secondary-600) );
            color: #fff;
            padding: var(--spacing-3xl);
            /* bo góc bên phải của cả card */
            border-top-right-radius: var(--radius-xl);
            border-bottom-right-radius: var(--radius-xl);
        }

            /* chấm bi pattern */
            .auth-benefits-column::before {
                content: "";
                position: absolute;
                inset: 0; /* top:0; right:0; bottom:0; left:0; */
                pointer-events: none; /* không chắn click */
                background-image: url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='M20 20c0 11.046-8.954 20-20 20v20h40V20H20z'/%3E%3C/g%3E%3C/svg%3E");
                background-repeat: repeat;
                background-position: center center;
            }

            /* đảm bảo nội dung luôn trên layer chấm bi */
            .auth-benefits-column > * {
                position: relative;
                z-index: 1;
            } */
        /* .auth-benefits-column {
                    background: linear-gradient(135deg, var(--color-primary-600), var(--color-secondary-600) );
                    color: var(--color-white);
                    padding: var(--spacing-3xl);
                    display: flex;
                    flex-direction: column;
                    justify-content: center;
                    position: relative;
                    overflow: hidden;
                }

                    .auth-benefits-column::before {
                        content: "";
                        position: absolute;
                        inset: 0;
                        background: url("data:image/svg+xml,%3Csvg width='40' height='40' ...%3E") repeat;
                    } */

        .benefits-content {
            position: relative;
            z-index: 2;
        }

        .benefits-header {
            text-align: center;
            margin-bottom: var(--spacing-3xl);
        }

        .benefits-title {
            font-family: var(--font-heading);
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: var(--spacing-md);
            line-height: 1.2;
        }

        .benefits-subtitle {
            font-size: 1.125rem;
            opacity: .9;
            line-height: 1.5;
        }

        .benefits-list {
            display: flex;
            flex-direction: column;
            gap: var(--spacing-xl);
        }

        .benefit-item {
            display: flex;
            align-items: flex-start;
            gap: var(--spacing-lg);
        }

        .benefit-icon {
            width: 50px;
            height: 50px;
            background: rgba(255,255,255,.2);
            border-radius: var(--radius-lg);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            flex-shrink: 0;
        }

        .benefit-content h3 {
            font-weight: 600;
            margin-bottom: var(--spacing-xs);
            font-size: 1.125rem;
        }

        .benefit-content p {
            opacity: .9;
            line-height: 1.5;
            font-size: .9rem;
        }

        /* Auth Links */
        .auth-links {
            text-align: center;
            margin-top: var(--spacing-sm);
            padding-top: var(--spacing-sm);
            border-top: 1px solid var(--color-gray-200);
        }

        .auth-link {
            color: var(--color-primary-600);
            text-decoration: none;
            font-weight: 500;
            transition: color .3s ease;
        }

            .auth-link:hover {
                color: var(--color-primary-700);
                text-decoration: underline;
            }

        /* Error/Success Message */
        .auth-message {
            padding: var(--spacing-md);
            border-radius: var(--radius-lg);
            margin-bottom: var(--spacing-lg);
            display: flex;
            align-items: center;
            gap: var(--spacing-sm);
            font-size: .875rem;
            font-weight: 500;
        }

            .auth-message.error {
                background: #fef2f2;
                color: #dc2626;
                border: 1px solid #fecaca;
            }
        /* ==== partnerExtra spacing tweaks ==== */

        /* bump space under the “Years of Experience” group */
        #partnerExtra .form-group:nth-of-type(1) {
            margin-bottom: var(--spacing-lg);
        }

        /* bump space under the “Specializations” group */
        #partnerExtra .form-group:nth-of-type(2) {
            margin-bottom: var(--spacing-lg);
        }

        /*Sửa form - hoàng*/

        .role-options {
            display: flex;
            justify-content: space-between;
            gap: var(--spacing-md); /* giữ khoảng cách giữa 2 ô */
            width: 100%;
        }

        .role-option {
            flex: 1 1 0;
            padding: var(--spacing-md);
            text-align: center;
            cursor: pointer;
            border: 2px solid var(--color-gray-300);
            border-radius: var(--radius-lg);
            background: var(--color-white);
            transition: all 0.3s ease;
            display: flex;
            justify-content: center;
            align-items: center;
        }


            .role-option.selected {
                border-color: var(--color-primary-600);
                background: var(--color-primary-50);
            }

        .role-label {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem; /* khoảng cách giữa icon và text */
        }

        .role-icon {
            margin: 0;
            font-size: 1.5rem;
        }

        .role-title {
            margin: 0;
            font-size: 1rem;
            font-weight: 600;
            color: var(--color-gray-800);
        }

        .role-options.horizontal{
            margin-bottom:0;
        }

        /* Ẩn phần mô tả */
        .role-description {
            display: none;
        }

        .password-input-wrapper {
            position: relative;
        }

            .password-input-wrapper .form-input {
                width: 100%; /* sửa lại là full */
                padding-right: 2.5rem; /* đủ chỗ cho toggle eye icon */
            }

        .partner-extra-columns {
            display: flex;
            gap: var(--spacing-lg);
            flex-wrap: wrap;
            align-items: flex-start;
        }

            .partner-extra-columns .form-group-group {
                flex: 1;
                display: flex;
                flex-direction: column;
                gap: var(--spacing-md);
            }

            .partner-extra-columns .form-group {
                flex: 1;
            }

        .specializations-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: var(--spacing-sm);
        }

        .center-align {
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
        }
    </style>
}

<div class="auth-page">
  <div class="auth-main">
    <div class="auth-card">
      <!-- Left Column: Form -->
      <div class="auth-form-column">
        <div class="auth-header">
          <div class="auth-brand" style="margin-bottom:1rem;">
            <span class="brand-icon">日</span>
            <span class="brand-text">Nihongo Sekai</span>
          </div>
          <h1 class="auth-title" style="margin-bottom:1rem;">Bắt đầu hành trình của bạn</h1>
          <p class="auth-subtitle" style="margin-bottom:1rem;">
            Tạo tài khoản và làm chủ tiếng Nhật ngay hôm nay
          </p>
        </div>

        @* Hiển thị lỗi chung nếu có *@
        @if (TempData["Error"] != null)
        {
          <div class="auth-message error">
            @TempData["Error"]
          </div>
        }

        <!-- Role Selection -->
        <div class="role-selection">
          <label class="form-label">Chọn vai trò của bạn</label>
          <div class="role-options">
            <div class="role-option selected" data-role="Learner">
              <div class="role-icon">🎓</div>
              <h3 class="role-title">Người học</h3>
              <p class="role-description">
                Học tiếng Nhật qua các khóa học và lớp học trực tiếp
              </p>
            </div>
            <div class="role-option" data-role="Partner">
              <div class="role-icon">🏫</div>
              <h3 class="role-title">Đối tác</h3>
              <p class="role-description">
                Chia sẻ chuyên môn và giảng dạy tiếng Nhật cho học viên toàn cầu
              </p>
            </div>
          </div>
        </div>

        <form asp-action="Register"
              method="post"
              enctype="multipart/form-data"
              class="auth-form"
              id="registerForm">
          <input asp-for="ApplyAsPartner" type="hidden" id="ApplyAsPartner" value="false" />

          <div class="form-group">
            <label asp-for="FullName" class="form-label">Họ và tên</label>
            <input asp-for="FullName"
                   class="form-input"
                   placeholder="Nhập đầy đủ họ tên"
                   required autofocus />
            <span asp-validation-for="FullName" class="text-danger"></span>
          </div>

          <div class="form-group">
            <label asp-for="EmailAddress" class="form-label">Địa chỉ email</label>
            <input asp-for="EmailAddress"
                   type="email"
                   class="form-input"
                   placeholder="Nhập địa chỉ email"
                   required />
            <span asp-validation-for="EmailAddress" class="text-danger"></span>
          </div>

          <div class="form-group">
            <label asp-for="Password" class="form-label">Mật khẩu</label>
            <div class="password-input-wrapper">
              <input asp-for="Password"
                     type="password"
                     id="password"
                     class="form-input"
                     placeholder="Tạo mật khẩu đủ mạnh"
                     minlength="8" required />
            </div>

            <!-- Strength & Requirements -->
            <div class="password-strength" id="passwordStrength">
              <div class="strength-label">Độ mạnh mật khẩu:</div>
              <div class="strength-bar">
                <div id="strengthFill" class="strength-fill"></div>
              </div>
              <div id="strengthText" class="strength-text">
                Nhập mật khẩu
              </div>
            </div>
            <div class="password-requirements">
              <div id="req-length" class="requirement">
                <span class="req-icon">○</span>Tối thiểu 8 ký tự
              </div>
              <div id="req-uppercase" class="requirement">
                <span class="req-icon">○</span>Ít nhất 1 chữ hoa
              </div>
              <div id="req-lowercase" class="requirement">
                <span class="req-icon">○</span>Ít nhất 1 chữ thường
              </div>
              <div id="req-number" class="requirement">
                <span class="req-icon">○</span>Ít nhất 1 số
              </div>
              <div id="req-symbol" class="requirement">
                <span class="req-icon">○</span>Ít nhất 1 ký tự đặc biệt (!@@#$%^&*)
              </div>
            </div>
          </div>

          <div class="form-group">
            <label asp-for="ConfirmPassword" class="form-label">Xác nhận mật khẩu</label>
            <div class="password-input-wrapper">
              <input asp-for="ConfirmPassword"
                     type="password"
                     id="confirmPassword"
                     class="form-input"
                     placeholder="Xác nhận mật khẩu"
                     required />
            </div>
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
          </div>

          <!-- Chỉ hiện khi chọn Partner -->
          <div id="partnerExtra" style="display:none;">
            <!-- Years of Experience -->
            <div class="form-group">
              <label asp-for="YearsOfExperience" class="form-label">Kinh nghiệm (năm)</label>
              <select asp-for="YearsOfExperience"
                      class="form-input"
                      asp-items="Html.GetEnumSelectList<YearsOfExperience>()">
                <option value="">Chọn kinh nghiệm</option>
              </select>
              <span asp-validation-for="YearsOfExperience" class="text-danger"></span>
            </div>

            <!-- Specializations -->
            <div class="form-group">
              <label asp-for="Specializations" class="form-label">Chuyên môn</label>
              <div class="specializations-grid">
                @foreach (SpecializationType spec in Enum.GetValues(typeof(SpecializationType)))
                {
                  <label class="checkbox-group">
                    <input type="checkbox"
                           name="Specializations"
                           value="@spec"
                           class="checkbox-input"
                           @(Model.Specializations?.Contains(spec) == true ? "checked" : "") />
                    <span class="checkbox-label">
                      @Html.DisplayFor(_ => spec)
                    </span>
                  </label>
                }
              </div>
              <span asp-validation-for="Specializations" class="text-danger"></span>
            </div>

            <!-- Certificates & Qualifications -->
            <div class="form-group">
              <label asp-for="PartnerDocument" class="form-label">Chứng chỉ & bằng cấp</label>
              <div class="file-upload" id="certificateUpload">
                <div class="file-upload-icon">📁</div>
                <div class="file-upload-text">Tải lên chứng chỉ của bạn</div>
                <div class="file-upload-hint">
                  PDF, DOC hoặc hình ảnh, tối đa 10MB
                </div>
                <input type="file"
                       name="PartnerDocument"
                       id="PartnerDocument"
                       multiple
                       accept=".pdf,.doc,.docx,.jpg,.jpeg,.png"
                       style="display:none;" />
              </div>
              <div id="fileList" class="file-list"></div>
              <span asp-validation-for="PartnerDocument" class="text-danger"></span>
            </div>
          </div>

          <!-- Agree Terms -->
          <div class="form-group">
            <label class="form-label">
              <input asp-for="AgreeTerms"
                     type="checkbox"
                     id="AgreeTerms"
                     disabled />
              Tôi đồng ý với
              <a href="~/terms" class="auth-link" target="_blank">Điều khoản dịch vụ</a>
              và
              <a href="~/privacy" class="auth-link" target="_blank">Chính sách bảo mật</a>
            </label>
            <span asp-validation-for="AgreeTerms" class="text-danger"></span>
          </div>

          <!-- Submit Button -->
          <button type="submit"
                  id="registerButton"
                  class="auth-button"
                  disabled>
            <span id="registerButtonText">Tạo tài khoản</span>
            <div id="registerSpinner" class="spinner" style="display:none;"></div>
          </button>
        </form>

        <!-- Social Login -->
        <div class="social-login">
          <div class="social-divider">Hoặc đăng ký bằng</div>
          <div class="social-buttons">
            <button type="button" class="social-button" onclick="signupWithGoogle()">
              <img src="https://developers.google.com/identity/images/g-logo.png" alt="Google" />
              Google
            </button>
          </div>
        </div>

        <!-- Auth Links -->
        <div class="auth-links">
          <p>
            Đã có tài khoản?
            <a asp-action="Login" class="auth-link">Đăng nhập tại đây</a>
          </p>
        </div>

        <div class="mt-4 text-center">
          <a asp-controller="Home" asp-action="Index" class="text-muted small">
            <i class="bi bi-arrow-left-circle"></i> Quay về trang chủ
          </a>
        </div>
      </div>
    </div>
  </div><!-- /.auth-card -->
</div><!-- /.auth-page -->
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener("DOMContentLoaded", () => {
          // --- ELEMENT REFERENCES ---
          const form          = document.getElementById('registerForm');
          const roleHidden    = document.getElementById('ApplyAsPartner');
          const partnerExtra  = document.getElementById('partnerExtra');
          const yearsSelect   = document.getElementById('YearsOfExperience');
          const certInput     = document.getElementById('PartnerDocument');
          const certList      = document.getElementById('fileList');
          const specsEls      = () => Array.from(document.querySelectorAll('input[name="Specializations"]'));
          const chkTerms      = document.getElementById('AgreeTerms');
          const btnSubmit     = document.getElementById('registerButton');
          const btnText       = document.getElementById('registerButtonText');

          // 1) ROLE TOGGLE & DYNAMIC REQUIRED
          document.querySelectorAll('.role-option').forEach(opt => {
            opt.addEventListener('click', () => {
              document.querySelectorAll('.role-option').forEach(o => o.classList.remove('selected'));
              opt.classList.add('selected');
              const isPartner = opt.dataset.role === 'Partner';
              roleHidden.value = isPartner ? 'true' : 'false';
              btnText.textContent = isPartner ? 'Yêu cầu tài khoản' : 'Tạo tài khoản';
              partnerExtra.style.display = isPartner ? 'block' : 'none';
              if (isPartner) {
                yearsSelect.setAttribute('required','');
                certInput.setAttribute('required','');
              } else {
                yearsSelect.removeAttribute('required');
                certInput.removeAttribute('required');
              }
              updateEnableState();
            });
          });

          // 2) PASSWORD VISIBILITY TOGGLE
          window.togglePassword = (id) => {
            const inp  = document.getElementById(id),
                  icon = document.getElementById(id === 'password' ? 'eyeIcon' : 'eyeIcon2');
            if (inp.type === 'password') {
              inp.type = 'text';
              icon.innerHTML = '<path d="M1.05 12 ..."/><path d="M4.27 4.27 ..."/>';
            } else {
              inp.type = 'password';
              icon.innerHTML = '<path d="M1 12s4-8 ..."/><circle cx="12" cy="12" r="3"/>';
            }
          };

          // 3) PASSWORD STRENGTH METER
          const pwd = document.getElementById('password'),
                cf  = document.getElementById('confirmPassword'),
                reqs = {
                  length:    document.getElementById('req-length'),
                  uppercase: document.getElementById('req-uppercase'),
                  lowercase: document.getElementById('req-lowercase'),
                  number:    document.getElementById('req-number'),
                  symbol:    document.getElementById('req-symbol')
                },
                fill = document.getElementById('strengthFill'),
                txt  = document.getElementById('strengthText');
          pwd.addEventListener('input', () => {
            const v = pwd.value;
            const checks = {
              length:    v.length >= 8,
              uppercase: /[A-Z]/.test(v),
              lowercase: /[a-z]/.test(v),
              number:    /\d/.test(v),
              symbol:    /[!@@#$%^&*]/.test(v)
            };
            let score = 0;
            Object.entries(checks).forEach(([k, ok]) => {
              if (ok) {
                reqs[k].style.color = 'var(--color-success)';
                reqs[k].querySelector('.req-icon').textContent = '✓';
                score++;
              } else {
                reqs[k].style.color = 'var(--color-gray-600)';
                reqs[k].querySelector('.req-icon').textContent = '○';
              }
            });
            const levels = [
              { w:'20%', t:'Rất yếu',     c:'#ef4444' },
              { w:'40%', t:'Yếu',         c:'#f59e0b' },
              { w:'60%', t:'Trung bình',  c:'#eab308' },
              { w:'80%', t:'Tốt',         c:'#22c55e' },
              { w:'100%',t:'Mạnh',        c:'#16a34a' }
            ];
            if (!v) {
              fill.style.width = '0';
              fill.style.background = '#e5e7eb';
              txt.textContent = 'Nhập mật khẩu';
            } else {
              const lv = levels[Math.min(score,4)];
              fill.style.width = lv.w;
              fill.style.background = lv.c;
              txt.textContent = lv.t;
            }
          });
          cf.addEventListener('input', () => {
            cf.setCustomValidity(cf.value !== pwd.value ? 'Mật khẩu không khớp' : '');
          });

          // 4) FILE UPLOAD
          const uploadZone = document.getElementById('certificateUpload');
          const dt         = new DataTransfer();
          uploadZone.addEventListener('click', () => certInput.click());
          ['dragover','dragleave','drop'].forEach(evt => {
            uploadZone.addEventListener(evt, e => {
              e.preventDefault();
              uploadZone.classList.toggle('dragover', evt==='dragover');
              if (evt==='drop') Array.from(e.dataTransfer.files).forEach(addFile);
            });
          });
          certInput.addEventListener('change', () =>
            Array.from(certInput.files).forEach(addFile)
          );
          function addFile(file) {
            if (file.size > 10*1024*1024) return alert('File quá lớn: '+file.name);
            dt.items.add(file);
            certInput.files = dt.files;
            const row = document.createElement('div');
            row.className = 'file-item';
            row.innerHTML = `<span>${file.name} (${(file.size/1024/1024).toFixed(2)} MB)</span>
                             <span class="file-remove">×</span>`;
            row.querySelector('.file-remove').onclick = () => {
              for (let i=0;i<dt.items.length;i++){
                if(dt.items[i].getAsFile().name===file.name){dt.items.remove(i);break;}
              }
              certInput.files = dt.files; row.remove(); updateEnableState();
            };
            certList.appendChild(row); updateEnableState();
          }

          // 5) TERMS & SUBMIT LOGIC
          function updateEnableState(){
            const baseValid = form.checkValidity();
            let partnerOk = true;
            if(roleHidden.value==='true'){
              partnerOk =
                yearsSelect.value !== '' &&
                specsEls().some(ch=>ch.checked) &&
                certList.children.length>0;
            }
            chkTerms.disabled = !(baseValid && partnerOk);
            btnSubmit.disabled = chkTerms.disabled || !chkTerms.checked;
          }
          form.addEventListener('input', updateEnableState);
          form.addEventListener('change', updateEnableState);
          updateEnableState();
        });
    </script>
}



