@using NihongoSekaiPlatform.Data.ViewModels
@using JapaneseLearningPlatform.Models
@using JapaneseLearningPlatform.Data

@model IEnumerable<CourseWithPurchaseVM>
@{
    ViewData["Title"] = "List of Courses";
    ViewData["HideFooter"] = false;
}

<div class="container">
    @if (ViewBag.ShowAdvancedFilter as bool? == true)
{
    <div class="mb-4">
        <form asp-action="Filter" method="get" class="row g-2 align-items-center">
            <div class="col-auto">
                <label class="form-label mb-0">Category:</label>
            </div>
            <div class="col-auto">
                <select name="selectedCategory" class="form-select">
                 <option value="">Select a category...</option>

@foreach (CourseCategory category in Enum.GetValues(typeof(CourseCategory)))
{
    var isSelected = ViewBag.SelectedCategory != null && category.ToString() == ViewBag.SelectedCategory.ToString();
    var selectedAttr = isSelected ? "selected" : "";
    @: <option value="@category" @selectedAttr>@category</option>
}
                </select>
            </div>
            <div class="col-auto">
                <input type="text" name="searchString" class="form-control" placeholder="Search by name..." value="@ViewBag.SearchString" />
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-funnel"></i> Apply Filter
                </button>
            </div>
        </form>
    </div>
}
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var item in Model)
        {
            <div class="col">
                <div class="card h-100 shadow border-0 rounded-4 overflow-hidden position-relative">

                    <img src="@item.Course.ImageURL" class="card-img-top" alt="@item.Course.Name" style="height: 220px; object-fit: cover;" />

                    <div class="card-body d-flex flex-column">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title text-truncate mb-0" title="@item.Course.Name">@item.Course.Name</h5>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                            {
                                <a asp-action="Edit" asp-route-id="@item.Course.Id" class="btn btn-sm btn-outline-secondary ms-2" title="Edit">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                            }
                        </div>

                        <p class="card-text small text-muted">@item.Course.Description?.Substring(0, Math.Min(100, item.Course.Description.Length))...</p>

                        <ul class="list-unstyled small mb-3">
                            <li><strong>Category:</strong> @item.Course.CourseCategory</li>
                            <li><strong>Start:</strong> @item.Course.StartDate.ToString("dd MMM yy")</li>
                            <li><strong>End:</strong> @item.Course.EndDate.ToString("dd MMM yy")</li>
                            <li>
                                <strong>Status:</strong>
                                @if (DateTime.Now >= item.Course.StartDate && DateTime.Now <= item.Course.EndDate)
                                {
                                    <span class="badge bg-success">AVAILABLE</span>
                                }
                                else if (DateTime.Now > item.Course.EndDate)
                                {
                                    <span class="badge bg-danger">EXPIRED</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary">UPCOMING</span>
                                }
                            </li>
                        </ul>

                        <div class="mt-auto d-flex flex-column gap-2">

                            @if (!item.IsPurchased && DateTime.Now <= item.Course.EndDate && !item.IsInCart)
                            {
                                <a class="btn btn-outline-primary w-100" asp-action="Details" asp-route-id="@item.Course.Id">
                                    <i class="bi bi-eye-fill"></i> View Details
                                </a>
                                <a class="btn btn-success text-white w-100" asp-controller="Orders" asp-action="AddItemToShoppingCart" asp-route-id="@item.Course.Id">
                                    <i class="bi bi-cart-plus"></i> Buy for @item.Course.Price.ToString("c")
                                </a>
                            }

                            else if (item.IsInCart)
                            {
                                <a class="btn btn-outline-primary w-100" asp-action="Details" asp-route-id="@item.Course.Id">
                                    <i class="bi bi-eye-fill"></i> View Details
                                </a>
                                <a class="btn btn-warning w-100 disabled">
                                    <i class="bi bi-cart-check"></i> In Cart
                                </a>
                            }
                            else if (item.IsPurchased)
                            {
                                <a class="btn btn-success text-white w-100" asp-action="Details" asp-route-id="@item.Course.Id">
                                        <i class="bi bi-play-btn"></i> Start Learning
                                </a>
                            }
                            else
                            {
                                <span class="badge bg-danger text-center p-2">Course Expired</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>
    <div class="d-flex justify-content-center mt-4">
        <nav aria-label="Course pagination">
            <ul class="pagination">

                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    <li class="page-item @(i == (int)ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }

            </ul>
        </nav>
    </div>
</div>

@await Html.PartialAsync("_CreateItem", "Courses")

@if (ViewBag.TotalItems != null && ViewBag.PageSize != null && ViewBag.CurrentPage != null)
{
    var totalPages = (int)Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize);
    if (totalPages > 1)
    {
        <nav class="mt-4">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link"
                           href="@Url.Action("Filter", "Courses", new { page = i, searchString = ViewBag.SearchString })">
                            @i
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
}
