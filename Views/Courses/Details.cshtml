@using JapaneseLearningPlatform.Data.ViewModels
@using JapaneseLearningPlatform.Data.Enums
@using JapaneseLearningPlatform.Data
@model CourseHierarchyVM
@Html.AntiForgeryToken()
@functions {
    public string ToEmbedUrl(string url)
    {
        if (string.IsNullOrWhiteSpace(url)) return "";
        if (!url.Contains("watch?v=")) return url;
        var videoId = url.Split("watch?v=")[1].Split('&')[0];
        return $"https://www.youtube.com/embed/{videoId}";
    }
}

@{
    ViewData["Title"] = "Chi tiết khóa học";
    var firstVideoUrl = Model.Sections?
        .SelectMany(s => s.ContentItems)
        .FirstOrDefault(ci => ci.ContentType == ContentType.Video)?.Video?.VideoURL;

    var defaultEmbed = ToEmbedUrl(firstVideoUrl ?? "");
}

<style>
    /* ========== LAYOUT ========== */
.course-layout {
    display: grid;
    grid-template-columns: 75% 25%;
    align-items: flex-start;
    gap: 32px;
}

/* ========== VIDEO SECTION ========== */
.video-section iframe {
    border-radius: 12px;
    border: 3px solid #f5365c;
    box-shadow: 0 0 12px rgba(245, 54, 92, 0.3);
}
.video-section h2,
.sidebar-section h2 {
    color: #f5365c;
}

/* ========== SIDEBAR SECTION ========== */
.sidebar-section {
    width: 100%;
    max-width: 500px;
    position: sticky;
    top: 100px;
    padding: 16px;
    background-color: #fff;
    border: 2px solid #f5365c;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(245, 54, 92, 0.1);
    max-height: calc(100vh - 150px);
    overflow-y: auto;
    overflow-x: hidden;
    word-break: break-word;
}

.sidebar-section .btn {
    padding: 4px 8px;
    font-size: 0.85rem;
}

/* ========== ACCORDION ========== */
.accordion-item {
    border: 1px solid #f5365c;
    border-radius: 6px;
}
.accordion-button {
    background-color: #fef2f4;
    color: #f5365c;
    font-weight: 600;
    transition: background-color 0.3s ease;
}
.accordion-button:not(.collapsed) {
    background-color: #f5365c;
    color: #fff;
}
.accordion-body {
    background-color: #fff;
}
.accordion-body .d-flex {
    flex-wrap: wrap;
    gap: 8px;
}
.accordion-body .d-flex > div {
    flex: 1 1 auto;
    min-width: 100px;
}

/* ========== BUTTONS ========== */
.btn-nihongo,
.btn-nihongo-outline {
    border: none;
    font-weight: 600;
    padding: 8px 16px;
    border-radius: 6px;
    transition: all 0.3s ease;
}
.btn-nihongo {
    background-color: #f5365c;
    color: #fff;
}
.btn-nihongo:hover {
    background-color: #d52d50;
}
.btn-nihongo-outline {
    background-color: transparent;
    color: #f5365c;
    border: 2px solid #f5365c;
}
.btn-nihongo-outline:hover {
    background-color: #f5365c;
    color: #fff;
}

/* ========== BADGE ========== */
.badge-nihongo {
    background-color: #f5365c;
    color: #fff;
    font-weight: 600;
    border-radius: 5px;
    padding: 4px 8px;
    font-size: 0.85rem;
}

/* ========== LIST GROUP ========== */
.list-group-item {
    border-left: 4px solid #f5365c;
    background-color: #fff;
    border-radius: 0;
}

/* ========== LINKS ========== */
.play-video-link {
    color: #f5365c;
}
.play-video-link:hover {
    text-decoration: underline;
}

/* ========== CONTAINER ========== */
.container {
    max-width: 100% !important;
    padding: 0 40px;
}

</style>


<div class="container mt-4">
    <div class="course-layout">
        <div class="video-section">
                <iframe id="mainVideoPlayer"
                        class="rounded"
                        src="@defaultEmbed"
                        allowfullscreen
                        style="width:97%; height:600px;">
                </iframe>

            <h2 class="fw-bold">@Model.Course.Name</h2>
            <p class="text-muted mb-2">@Model.Course.Description</p>
            <h3 class="fw-bold">Mô tả</h3>
            <p id="videoDescription" class="text-muted mb-2">@Model.Video?.VideoDescription</p>
            <p class="mb-1"><strong>Loại:</strong> @Model.Course.CourseCategory.GetDisplayName()</p>
            <p class="mb-1"><strong>Hạn áp dụng giảm giá:</strong> @Model.Course.StartDate?.ToString("dd MMM yyyy")</p>
            <p class="mb-3"><strong>Hạn kết thúc giảm giá:</strong> @Model.Course.EndDate?.ToString("dd MMM yyyy")</p>
            @if (!Model.IsPurchased && Model.Course.DiscountPercent != null && Model.Course.StartDate <= DateTime.Now && Model.Course.EndDate >= DateTime.Now)
            {
                <p class="text-danger">
                    <del>@Model.Course.Price.ToString("N0") ₫</del>
                    <strong>@Model.Course.FinalPrice.ToString("N0") ₫</strong>
                    <span class="badge badge-nihongo">@Model.Course.DiscountPercent% OFF</span>
                </p>
            }

            @if (!Model.IsPurchased && !User.IsInRole("Admin") && DateTime.Now <= Model.Course.EndDate && !Model.IsInCart)
            {
                <a class="btn btn-nihongo mt-2"
                   asp-controller="Orders" asp-action="AddItemToShoppingCart" asp-route-id="@Model.Course.Id">
                    <i class="bi bi-cart-plus"></i> Mua với @Model.Course.FinalPrice.ToString("N0") ₫
                </a>
            }
            else if (Model.IsInCart)
            {
                <button asp-controller="Orders" asp-action="ShoppingCart" class="btn btn-warning mt-2 disabled">
                    <i class="bi bi-cart-check"></i> Trong giỏ hàng
                </button>
            }

            <div class="mt-4">
                <a asp-action="Index" class="btn btn-nihongo-outline">
                    <i class="bi bi-arrow-left-circle"></i> Trở về danh sách khóa học
                </a>
            </div>
            
        </div>
        @if (User.IsInRole("Admin"))
        {
            <div class="sidebar-section">
                <a asp-controller="CourseSections" asp-action="Create" asp-route-courseId="@Model.Course.Id"
                   class="btn btn-sm btn-nihongo-outline mb-3">
                    <i class="bi bi-plus-circle"></i> Thêm mục
                </a>
                <h5 class="fw-semibold mb-3">Nội dung khóa học</h5>
                <div class="accordion" id="courseSectionsAccordion">
                    @for (int i = 0; i < Model.Sections.Count; i++)
                    {
                        var sections = Model.Sections[i];
                        var headingId = $"heading{i}";
                        var collapseId = $"collapse{i}";

                        <div class="accordion-item mb-2">
                            <h2 class="accordion-header" id="@headingId">
                                <button class="accordion-button collapsed" type="button"
                                        data-bs-toggle="collapse"
                                        data-bs-target="#@collapseId"
                                        aria-expanded="false"
                                        aria-controls="@collapseId">
                                    @sections.Title
                                </button>
                            </h2>

                            <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#courseSectionsAccordion">
                                <div class="accordion-body">
                                    <div class="btn-group d-flex flex-wrap mb-3" role="group">
                                            <a asp-controller="CourseContentItems" asp-action="Create"
                                               asp-route-courseId="@Model.Course.Id"
                                               asp-route-sectionId="@sections.Id"
                                               class="btn btn-sm btn-nihongo-outline">
                                                <i class="bi bi-plus-circle"></i>Sửa nội dung
                                            </a>
                                            <a asp-controller="CourseSections" asp-action="Edit"
                                               asp-route-id="@sections.Id"
                                               class="btn btn-sm btn-nihongo-outline">
                                                <i class="bi bi-pencil"></i>Sửa tên mục
                                            </a>
                                            <a asp-controller="CourseSections" asp-action="Delete"
                                               asp-route-id="@sections.Id"
                                               class="btn btn-sm btn-nihongo-outline"
                                               onclick="return confirm('Bạn có chắc xóa mục này chứ (Trong mục bao gồm nội dung sẽ mất)?');">
                                                <i class="bi bi-trash"></i> Xóa mục
                                            </a>
                                           
                                            
                                        </div>
                                    <ul class="list-group list-group-flush">
                                        @foreach (var item in sections.ContentItems)
                                        {
                                            <li class="list-group-item">
                                                <div class="d-flex justify-content-between align-items-start">
                                                    <div>
                                                        @if (item.ContentType == ContentType.Video && item.Video != null)
                                                        {
                                                            <a href="javascript:void(0);"
                                                               class="play-video-link text-decoration-none text-dark fw-semibold"
                                                               data-video-url="@ToEmbedUrl(item.Video.VideoURL)"
                                                               data-description="@item.Video.VideoDescription">
                                                                ▶ @item.Title
                                                            </a>
                                                        }
                                                        else if (item.ContentType == ContentType.Quiz && item.Quiz != null)
                                                        {
                                                            <div>
                                                                <a asp-controller="Quizzes" asp-action="Manage" asp-route-id="@item.Quiz.Id" class="btn btn-sm btn-nihongo-outline">
                                                                    Quản lý Q&A
                                                                </a>
                                                            </div>
                                                            <div>
                                                                <a asp-action="Preview" asp-controller="Quizzes" asp-route-id="@item.Quiz.Id" class="btn btn-nihongo-outline">
                                                                    Xem trước Quiz
                                                                </a>
                                                            </div>
                                                            <div class="d-flex flex-wrap gap-2 align-items-center">
                                                                <a asp-controller="Quizzes" asp-action="Start" asp-route-id="@item.Quiz.Id"
                                                                   class="btn btn-sm btn-outline-primary">
                                                                    <i class="bi bi-pencil-square"></i> Bắt đầu Quiz
                                                                </a>
                                                                @if (Model.QuizHighScores?.TryGetValue(item.Quiz.Id, out var score) == true)
                                                                {
                                                                    <span class="badge bg-success">🏆 @score</span>
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="btn-group d-flex flex-wrap mb-3" role="group">
                                                        <div>
                                                            <a asp-controller="CourseContentItems" asp-action="Edit" asp-route-id="@item.Id"
                                                               class="btn btn-sm btn-nihongo-outline me-1">
                                                                <i class="bi bi-pencil"></i>Sửa nội dung
                                                            </a>
                                                        </div>
                                                        <div>
                                                            <a asp-controller="CourseContentItems" asp-action="Delete" asp-route-id="@item.Id"
                                                               class="btn btn-sm btn-nihongo-outline"
                                                               onclick="return confirm('Bạn có chắc muốn xóa nội dung này chứ?');">
                                                                <i class="bi bi-trash"></i>Xóa nội dung
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                        }
                </div>
            </div>
        }
        @if ((Model.IsPurchased && User.IsInRole("Learner")) && Model.Sections != null && Model.Sections.Any())
        {
            <div class="sidebar-section">
                <div class="progress mt-3" style="height: 20px;">
                    <div id="mainProgressBar" class="progress-bar bg-danger" role="progressbar"
                         style="width:@Model.ProgressPercent%"
                         aria-valuenow="@Model.ProgressPercent"
                         aria-valuemin="0" aria-valuemax="100">
                        @Model.ProgressPercent.ToString("0")%
                    </div>
                </div>
                <h5 class="fw-semibold mb-3">Nội dung khóa học</h5>
                <div class="accordion" id="courseSectionsAccordion">
                    @for (int i = 0; i < Model.Sections.Count; i++)
                    {
                        var sections = Model.Sections[i];
                        var headingId = $"heading{i}";
                        var collapseId = $"collapse{i}";

                        <div class="accordion-item mb-2">
                            <h2 class="accordion-header" id="@headingId">
                                <button class="accordion-button collapsed" type="button"
                                        data-bs-toggle="collapse"
                                        data-bs-target="#@collapseId"
                                        aria-expanded="false"
                                        aria-controls="@collapseId">
                                    @sections.Title
                                </button>
                            </h2>

                            <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#courseSectionsAccordion">
                                <div class="accordion-body">
                                    <ul class="list-group list-group-flush">
                                        @foreach (var item in sections.ContentItems)
                                        {
                                            <li class="list-group-item">
                                                <div class="d-flex justify-content-between align-items-start">
                                                    <div>
                                                        @if (item.ContentType == ContentType.Video && item.Video != null)
                                                        {
                                                            <input type="checkbox"
                                                                   class="me-2 content-checkbox"
                                                                   data-content-id="@item.Id"
                                                                   @(Model.CompletedContentIds.Contains(item.Id) ? "checked" : "") />
                                                            <a href="javascript:void(0);"
                                                               class="play-video-link text-decoration-none text-dark fw-semibold"
                                                               data-video-url="@ToEmbedUrl(item.Video.VideoURL)"
                                                               data-description="@item.Video.VideoDescription">
                                                                ▶ @item.Title
                                                            </a>
                                                        }
                                                        else if (item.ContentType == ContentType.Quiz && item.Quiz != null)
                                                        {
                                                            <div class="d-flex flex-wrap gap-2 align-items-center">
                                                                <a asp-controller="Quizzes" asp-action="Start" asp-route-id="@item.Quiz.Id"
                                                                   class="btn btn-sm btn-outline-primary">
                                                                    <i class="bi bi-pencil-square"></i> Bắt đầu Quiz
                                                                </a>
                                                                @if (Model.QuizHighScores?.TryGetValue(item.Quiz.Id, out var score) == true)
                                                                {
                                                                    <span class="badge bg-success">🏆 @score</span>
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else if(!User.IsInRole("Admin"))
        {
            <div class="sidebar-section">
                <h2 class="fw-bold"> Video xem trước </h2>
                </div>
           
        }
    </div>
</div>

@section Scripts {
    <script>
                    document.querySelectorAll('.content-checkbox').forEach(cb => {
            cb.addEventListener('change', function() {
                const payload = {
                    courseId: @Model.Course.Id,
                    contentItemId: this.dataset.contentId,
                    isCompleted: this.checked
                };

                fetch('/Courses/ToggleContentCompletion', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                }).then(res => res.json())
                  .then(data => {
                      console.log("Server response:", data);
                      if (data.success) {
                          updateProgressBar(data.progress);
                      }
                  })
                  .catch(err => console.error("Fetch error:", err));
            });
        });

                    function updateProgressBar(progress) {
            const bar = document.querySelector('.progress-bar');
            const percent = parseFloat(progress) || 0;
            bar.style.width = percent + '%';
            bar.setAttribute('aria-valuenow', percent);
            bar.textContent = percent.toFixed(0) + '%';

            if (percent >= 100) {
                document.querySelectorAll('.content-checkbox').forEach(cb => cb.disabled = true);
            }
        }



            document.addEventListener('DOMContentLoaded', function () {
            const links = document.querySelectorAll('.play-video-link');
            const player = document.getElementById('mainVideoPlayer');
            const description = document.getElementById('videoDescription');
            updateProgressBar(@Model.ProgressPercent);

            links.forEach(link => {
                link.addEventListener('click', function () {
                    const url = this.getAttribute('data-video-url');
                    const desc = this.getAttribute('data-description');

                    if (url) player.src = url;
                    if (desc !== null && description) description.textContent = desc;
                });
            });
        });
    </script>
}
